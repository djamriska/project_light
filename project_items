MongoDB design  - This section focuses on the development of the custom database for the extraction tools based on the MongoDB noSQL datbase tool.  Database definitions are documented in another document.  (Ayan) (2)
Develop sample data - Used to prototype and validate the database design while concurrent team member activies can occur. (Dave/Ayan) (2)
Comment Keyword Maintenance - Simple screens/ scripts to allow the creation and update of MongoDB document collections.  Includes CRUD functions. (Ayan) (5)
Article Keyword Maintenance - Simple screens/scripts to allow hte creation and update of MongoDB document collections for articles.  Includes all CRUD operations. (Ayan) (4)
Source Maintenance - Simple screens/scripts to allow the creation and update of MongoDB document collections for sources.  Includes the ability to update XPATH statements for extraction. (Ayan) (4)
Article Extraction - Uses scrapy to extract articles from the target website.  At this time all articles are extracted and input into the document collection for Articles. (Dave) (12)
Comment Extraction - Uses scrapy to extract comments from the target website.  At this time all comments are extracted and input into the document collection. (Dave) (10)
Profile Extraction - Uses scrapy to scan and extract profiles for comments that have been flagged.   (Dave) (4)
Article Keyword Assignment - After the articles have been extracted the keyword scanner will run and compare the content of the article against the list of article keywords.  If the article does not contain any of the article keywords then it is flagged for delete in 7 days.  Articles are stored as they maybe related to a recent event that has not been identified as part of the normal keyword scan.  For examples would include the Kauvnaugh confirmation, prior to the news release this was not on anyones radar. (Chien) (8)
Comment Keyword Assignment - After an article has been flagged as containing a keyword the scanner will reopen that website and scan in ALL comments that have been entered.  The tool will then analyze each comment to see if it contains keywords.  If the article contains keywords then a ranking score will be applied to the comment.  The comment will contain both the keyword, weight and total comment score. (Chien /Dave) (10/1)
Profile Extraction - If a comment contains a triggering keyword then the system will extrac information from that profile. (Dave) (2)
Comment Ranking (BM25 + weights calc) - After the articles and comments have been scored this screen will display the final rankings for all articles to the end user for review.  One key aspect is that the articles should be ranked according to their total comment scores.  (Chien) (10)
Flagging of Articles  (Future deliverable) - As part of the Comment Ranking allow the user to flag the comments/articles for future review or deeper research.
Flagging of Comments  (Future deliverable) - same as above
Match Profiles across Sources - If a comment has reached a minimum score (defined in system settings), then the system will attempt to find those same comments across multiples sources to see if the same user is posting across multiples sources.  System should provide a likeness of match.  (Ayan) (10)

Dave 30
Chien 28
Ayan 27
